<!--
/**
 *  Copyright (c) 2015-present, Jim Kynde Meyer
 *  All rights reserved.
 *
 *  This source code is licensed under the MIT license found in the
 *  LICENSE file in the root directory of this source tree.
 */
-->
<idea-plugin>
  <id>com.intellij.lang.jsgraphql</id>
  <name>JS GraphQL</name>
  <vendor>Jim Kynde Meyer - jimkyndemeyer@gmail.com</vendor>

  <description><![CDATA[
      <p>GraphQL language support including tagged template literals in JavaScript and TypeScript.</p>
      <br />
      <p>Feature highlights:</p>
      <ul>
        <li>Schema-aware completion, error highlighting, and documentation</li>
        <li>Syntax highlighting, code-formatting, folding, commenter, and brace-matching</li>
        <li>Execute queries and mutations with variables against configurable endpoints</li>
        <li>Support for multiple schemas using graphql-config</li>
      </ul>
    ]]>
  </description>

  <depends>com.intellij.modules.lang</depends>
  <depends optional="true" config-file="graphql-javascript.xml">JavaScript</depends>
  <depends optional="true" config-file="graphql-intellilang.xml">org.intellij.intelliLang</depends>

  <resource-bundle>messages.GraphQLMessages</resource-bundle>

  <extensionPoints>
    <extensionPoint name="graphQLFindUsagesFileTypeContributor" interface="com.intellij.lang.jsgraphql.ide.references.GraphQLFindUsagesFileTypeContributor" />
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">

    <applicationService serviceImplementation="com.intellij.lang.jsgraphql.ide.references.GraphQLFindUsagesUtil" />

    <!-- Language registration -->
    <fileTypeFactory implementation="com.intellij.lang.jsgraphql.GraphQLFileTypeFactory"/>
    <lang.parserDefinition language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.GraphQLParserDefinition"/>

    <!-- Icons -->
    <iconProvider implementation="com.intellij.lang.jsgraphql.GraphQLIconProvider" />

    <!-- Project services -->
    <projectService serviceInterface="com.intellij.lang.jsgraphql.schema.GraphQLSchemaProvider" serviceImplementation="com.intellij.lang.jsgraphql.schema.GraphQLSchemaProviderImpl" />
    <projectService serviceImplementation="com.intellij.lang.jsgraphql.schema.GraphQLRegistryProvider" />
    <projectService serviceImplementation="com.intellij.lang.jsgraphql.schema.GraphQLSchemaChangeListener" />
    <projectService serviceImplementation="com.intellij.lang.jsgraphql.ide.project.GraphQLPsiSearchHelper" />
    <projectService serviceImplementation="com.intellij.lang.jsgraphql.ide.references.GraphQLReferenceService" />
    <projectService serviceImplementation="com.intellij.lang.jsgraphql.v1.ide.project.JSGraphQLLanguageUIProjectService" />
    <projectService serviceImplementation="com.intellij.lang.jsgraphql.GraphQLSettings" />
    <projectService serviceImplementation="com.intellij.lang.jsgraphql.ide.project.graphqlconfig.GraphQLConfigManager" />
    <projectService serviceImplementation="com.intellij.lang.jsgraphql.ide.editor.GraphQLIntrospectionService" />
    <projectService serviceInterface="com.intellij.lang.jsgraphql.ide.project.graphqlconfig.GraphQLConfigGlobMatcher" serviceImplementation="com.intellij.lang.jsgraphql.ide.project.graphqlconfig.GraphQLConfigGlobMatcherImpl" />
    <projectService serviceImplementation="com.intellij.lang.jsgraphql.ide.GraphQLRelayModernAnnotationFilter" />

    <!-- Indexing -->
    <fileBasedIndex implementation="com.intellij.lang.jsgraphql.ide.project.indexing.GraphQLIdentifierIndex" />
    <fileBasedIndex implementation="com.intellij.lang.jsgraphql.ide.project.indexing.GraphQLFragmentNameIndex" />

    <!-- Startup -->
    <postStartupActivity implementation="com.intellij.lang.jsgraphql.endpoint.ide.startup.GraphQLStartupActivity" />
    <postStartupActivity implementation="com.intellij.lang.jsgraphql.ide.project.graphqlconfig.GraphQLConfigProjectStartupActivity" />
    <postStartupActivity implementation="com.intellij.lang.jsgraphql.ide.project.relay.GraphQLRelayModernEnableStartupActivity" />
    <postStartupActivity implementation="com.intellij.lang.jsgraphql.v1.ide.editor.JSGraphQLQueryContextCaretListener" />

    <!-- Syntax and error highlighting -->
    <lang.syntaxHighlighterFactory language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.GraphQLSyntaxHighlighterFactory"/>
    <annotator language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.GraphQLSyntaxAnnotator" />
    <annotator language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.GraphQLValidationAnnotator" />
    <colorSettingsPage implementation="com.intellij.lang.jsgraphql.ide.GraphQLColorSettingsPage"/>

    <!-- Formatting and folding -->
    <lang.formatter language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.formatter.GraphQLFormattingModelBuilder"/>
    <langCodeStyleSettingsProvider implementation="com.intellij.lang.jsgraphql.ide.formatter.GraphQLLanguageCodeStyleSettingsProvider"/>
    <codeStyleSettingsProvider implementation="com.intellij.lang.jsgraphql.ide.formatter.GraphQLCodeStyleSettingsProvider"/>
    <lang.foldingBuilder language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.editor.GraphQLFoldingBuilder"/>

    <!-- Editing -->
    <lang.braceMatcher language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.GraphQLBraceMatcher" />
    <lang.quoteHandler language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.editor.GraphQLQuoteHandler" />
    <lang.commenter language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.editor.GraphQLCommenter"/>
    <enterHandlerDelegate implementation="com.intellij.lang.jsgraphql.ide.formatter.GraphQLEnterInEmptyListHandler"/>

    <!-- Completion -->
    <completion.contributor language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.completion.GraphQLCompletionContributor"/>

    <!-- Find usages and renaming refactors -->
    <lang.findUsagesProvider language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.references.GraphQLFindUsagesProvider" />
    <usageTypeProvider implementation="com.intellij.lang.jsgraphql.ide.references.GraphQLUsageTypeProvider" />
    <lang.elementManipulator forClass="com.intellij.lang.jsgraphql.psi.impl.GraphQLIdentifierImpl" implementationClass="com.intellij.lang.jsgraphql.ide.references.GraphQLIdentifierManipulator" />

    <!-- Search (find implementations etc.) -->
    <definitionsSearch implementation="com.intellij.lang.jsgraphql.ide.search.GraphQLDefinitionsSearchExecutor"/>

    <!-- Renaming -->
    <vetoRenameCondition implementation="com.intellij.lang.jsgraphql.ide.rename.GraphQLRenameVetoCondition" />

    <!-- Settings -->
    <projectConfigurable groupId="language" instance="com.intellij.lang.jsgraphql.ui.GraphQLProjectConfigurable" />

    <!-- .graphqlconfig JSON -->
    <fileTypeFactory implementation="com.intellij.lang.jsgraphql.ide.project.graphqlconfig.GraphQLConfigFileTypeFactory" />

    <!-- recognize .graphqls as GraphQL for legacy reasons -->
    <fileTypeFactory implementation="com.intellij.lang.jsgraphql.ide.project.GraphQLSLegacyFileTypeFactory" />

    <!-- Editor notifications -->
    <editorNotificationProvider implementation="com.intellij.lang.jsgraphql.ide.notifications.GraphQLScopeEditorNotificationProvider"/>

      <!-- Introspection -->
      <codeInsight.lineMarkerProvider implementationClass="com.intellij.lang.jsgraphql.ide.editor.GraphQLIntrospectionJsonToSDLLineMarkerProvider" language="JSON" />
      <codeInsight.lineMarkerProvider implementationClass="com.intellij.lang.jsgraphql.ide.editor.GraphQLIntrospectEndpointUrlLineMarkerProvider" language="JSON" />
      <projectViewNestingRulesProvider implementation="com.intellij.lang.jsgraphql.ide.project.GraphQLIntrospectionProjectViewNestingRulesProvider" />
      <editorTabTitleProvider implementation="com.intellij.lang.jsgraphql.ide.editor.GraphQLIntrospectionEditorTabTitleProvider" />

    <!-- Project Language services -->
    <projectService serviceInterface="com.intellij.lang.jsgraphql.v1.ide.configuration.JSGraphQLConfigurationProvider" serviceImplementation="com.intellij.lang.jsgraphql.v1.ide.configuration.JSGraphQLConfigurationProvider" />
    <projectService serviceInterface="com.intellij.lang.jsgraphql.endpoint.ide.project.JSGraphQLEndpointNamedTypeRegistry" serviceImplementation="com.intellij.lang.jsgraphql.endpoint.ide.project.JSGraphQLEndpointNamedTypeRegistry" />


    <!-- Spellchecking and to-do view-->
    <spellchecker.support language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.JSGraphQLEndpointSpellcheckingStrategy" />
    <todoIndexer filetype="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.JSGraphQLEndpointTodoIndexer"/>


    <!-- File types -->
    <fileTypeFactory implementation="com.intellij.lang.jsgraphql.endpoint.JSGraphQLEndpointFileTypeFactory"/>
    <fileTypeFactory implementation="com.intellij.lang.jsgraphql.endpoint.doc.JSGraphQLEndpointDocFileTypeFactory"/>
    <internalFileTemplate name="GraphQL File"/>


    <!-- Language -->

    <lang.parserDefinition language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.JSGraphQLEndpointParserDefinition"/>
    <lang.parserDefinition language="GraphQL Endpoint Doc" implementationClass="com.intellij.lang.jsgraphql.endpoint.doc.JSGraphQLEndpointDocParserDefinition"/>

    <lang.syntaxHighlighterFactory language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.ide.highlighting.JSGraphQLEndpointSyntaxHighlighterFactory"/>
    <lang.syntaxHighlighterFactory language="GraphQL Endpoint Doc" implementationClass="com.intellij.lang.jsgraphql.endpoint.doc.ide.highlighting.JSGraphQLEndpointDocSyntaxHighlighterFactory"/>

    <lang.commenter language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.v1.ide.editor.JSGraphQLCommenter"/>

    <lang.braceMatcher language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.ide.editor.JSGraphQLEndpointBraceMatcher"  />
    <lang.psiStructureViewFactory language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.structureView.GraphQLPsiStructureViewFactory"/>

    <lang.psiStructureViewFactory language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.ide.structureView.JSGraphQLEndpointPsiStructureViewFactory"/>
    <iconProvider implementation="com.intellij.lang.jsgraphql.endpoint.psi.JSGraphQLEndpointIconProvider" />
    <enterHandlerDelegate implementation="com.intellij.lang.jsgraphql.endpoint.ide.editor.JSGraphQLEndpointEnterHandlerDelegate" />

    <!-- Completion -->
    <completion.contributor language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.ide.completion.JSGraphQLEndpointCompletionContributor"/>
    <completion.contributor language="GraphQL Endpoint Doc" implementationClass="com.intellij.lang.jsgraphql.endpoint.doc.ide.completion.JSGraphQLEndpointDocCompletionContributor"/>


    <!-- Error highlighting and annotations -->
    <annotator language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.ide.annotator.JSGraphQLEndpointHighlightAnnotator" />
    <annotator language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.ide.annotator.JSGraphQLEndpointErrorAnnotator" />
    <annotator language="GraphQL Endpoint Doc" implementationClass="com.intellij.lang.jsgraphql.endpoint.doc.ide.annotator.JSGraphQLEndpointDocHighlightAnnotator" />


    <!-- Query context highlighter -->
    <highlightVisitor implementation="com.intellij.lang.jsgraphql.v1.ide.editor.JSGraphQLQueryContextHighlightVisitor" />


    <!-- Formatting -->
    <lang.formatter language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.ide.formatter.JSGraphQLEndpointFormattingModelBuilder"/>

    <lang.foldingBuilder language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.ide.editor.JSGraphQLEndpointFoldingBuilder"/>

    <lang.quoteHandler language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.ide.editor.JSGraphQLEndpointQuoteHandler" />

    <!-- Find usages -->
    <lang.findUsagesProvider language="GraphQL Endpoint" implementationClass="com.intellij.lang.jsgraphql.endpoint.ide.findUsages.JSGraphQLEndpointFindUsagesProvider" />
    <findUsagesHandlerFactory id="GraphQL Endpoint" implementation="com.intellij.lang.jsgraphql.endpoint.ide.findUsages.JSGraphQLEndpointFindUsagesHandlerFactory"/>

    <!-- Schema documentation -->
    <lang.documentationProvider language="GraphQL" implementationClass="com.intellij.lang.jsgraphql.ide.documentation.GraphQLDocumentationProvider" />

    <!-- Note: JSX/TSX documentation providers are registered in their base language (JS), so we do the same to not take over the entire doc impl -->
    <lang.documentationProvider language="JavaScript" implementationClass="com.intellij.lang.jsgraphql.ide.documentation.GraphQLDocumentationProvider" />

    <!-- Language injection -->
    <languageInjector implementation="com.intellij.lang.jsgraphql.endpoint.doc.ide.injection.JSGraphQLEndpointDocInjector" />

    <!-- Query execution (see com.intellij.openapi.actionSystem.IdeActions.ACTION_EDITOR_SPLIT which is ctrl+enter by default) -->
    <editorActionHandler action="EditorSplitLine" implementationClass="com.intellij.lang.jsgraphql.v1.ide.actions.JSGraphQLExecuteEditorActionHandler" order="first" />
    <highlightErrorFilter implementation="com.intellij.lang.jsgraphql.v1.ide.editor.JSGraphQLVariablesHighlightErrorFilter" />


    <!-- Search (find implementations etc.) -->
    <definitionsSearch implementation="com.intellij.lang.jsgraphql.endpoint.ide.search.JSGraphQLEndpointDefinitionsSearchExecutor"/>


    <!-- Create type definition intentions -->
    <intentionAction>
      <className>com.intellij.lang.jsgraphql.endpoint.ide.intentions.JSGraphQLEndpointCreateObjectTypeIntention</className>
      <category>GraphQL</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.lang.jsgraphql.endpoint.ide.intentions.JSGraphQLEndpointCreateInterfaceTypeIntention</className>
      <category>GraphQL</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.lang.jsgraphql.endpoint.ide.intentions.JSGraphQLEndpointCreateEnumTypeIntention</className>
      <category>GraphQL</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.lang.jsgraphql.endpoint.ide.intentions.JSGraphQLEndpointCreateInputTypeIntention</className>
      <category>GraphQL</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.lang.jsgraphql.endpoint.ide.intentions.JSGraphQLEndpointCreateScalarTypeIntention</className>
      <category>GraphQL</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.lang.jsgraphql.endpoint.ide.intentions.JSGraphQLEndpointCreateUnionTypeIntention</className>
      <category>GraphQL</category>
    </intentionAction>


  </extensions>

  <actions>

    <action id="com.intellij.lang.jsgraphql.v1.ide.actions.JSGraphQLNewFileAction" class="com.intellij.lang.jsgraphql.v1.ide.actions.JSGraphQLNewFileAction">
      <add-to-group group-id="NewGroup"/>
    </action>

    <action class="com.intellij.lang.jsgraphql.ide.actions.GraphQLCreateConfigFileAction" id="com.intellij.lang.jsgraphql.ide.actions.GraphQLCreateConfigFileAction">
      <add-to-group group-id="NewGroup" />
    </action>

    <action id="com.intellij.lang.jsgraphql.endpoint.ide.actions.JSGraphQLEndpointNewFileAction" class="com.intellij.lang.jsgraphql.endpoint.ide.actions.JSGraphQLEndpointNewFileAction">
      <add-to-group group-id="NewGroup"/>
    </action>

    <action class="com.intellij.lang.jsgraphql.v1.ide.actions.JSGraphQLExecuteEditorAction" id="com.intellij.lang.jsgraphql.v1.ide.actions.JSGraphQLExecuteEditorAction">
      <keyboard-shortcut first-keystroke="control ENTER" keymap="$default"/>
      <keyboard-shortcut first-keystroke="meta ENTER" keymap="Mac OS X"/>
      <keyboard-shortcut first-keystroke="meta ENTER" keymap="Mac OS X 10.5+"/>
    </action>

    <action class="com.intellij.lang.jsgraphql.ide.editor.GraphQLRerunLatestIntrospectionAction" id="com.intellij.lang.jsgraphql.ide.editor.GraphQLRerunLatestIntrospectionAction" />

  </actions>

</idea-plugin>
