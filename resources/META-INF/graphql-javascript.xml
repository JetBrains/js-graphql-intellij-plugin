<idea-plugin>
  <extensions defaultExtensionNs="com.intellij">

    <!-- Formatting -->
    <lang.formatter language="JavaScript"
                    implementationClass="com.intellij.lang.jsgraphql.javascript.formatter.GraphQLJavaScriptInjectedFormattingModelBuilder"/>
    <lang.formatter language="TypeScript"
                    implementationClass="com.intellij.lang.jsgraphql.javascript.formatter.GraphQLJavaScriptInjectedFormattingModelBuilder"/>

    <!-- Language Injection -->
    <multiHostInjector implementation="com.intellij.lang.jsgraphql.javascript.injection.GraphQLJavaScriptTemplateFragmentLanguageInjector"
                       order="first"/>

    <!-- Workspace -->
    <workspaceModel.fileIndexContributor
      implementation="com.intellij.lang.jsgraphql.javascript.workspace.GraphQLNodeModulesIndexContributor"/>

    <implicitUsageProvider implementation="com.intellij.lang.jsgraphql.javascript.usages.GraphQLConfigImplicitUsageProvider"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij.lang.jsgraphql">
    <fileTypeContributor
      implementation="com.intellij.lang.jsgraphql.javascript.injection.GraphQLJavaScriptFileTypeContributor"/>
    <injectedLanguage implementation="com.intellij.lang.jsgraphql.javascript.injection.GraphQLJavaScriptInjectedLanguage"/>
    <configCustomLoader implementation="com.intellij.lang.jsgraphql.javascript.config.GraphQLJavaScriptConfigLoader"/>
  </extensions>

  <projectListeners>
    <listener class="com.intellij.lang.jsgraphql.javascript.workspace.GraphQLNodeModulesLibraryUpdater$ConfigListener"
              topic="com.intellij.lang.jsgraphql.ide.config.GraphQLConfigListener"/>
  </projectListeners>
</idea-plugin>
