graphql=GraphQL

# Notifications
graphql.notification.introspection.error.title=GraphQL introspection
graphql.notification.introspection.error.body=A valid schema could not be built using the introspection result.<br/>Error: {0}
graphql.notification.introspection.spec.error.body=A valid schema could not be built using the introspection result. The endpoint may not follow the GraphQL Specification.<br/>Error: {0}
graphql.notification.introspection.parse.error=The server introspection response cannot be parsed as a valid JSON object.
graphql.notification.introspection.empty.schema.path=Please provide a valid path to schema in the config file. \
  The first schema pattern should contain the correct path to a file in the file system. {0}
graphql.notification.introspection.empty.schema.path.provided=Provided: ''{0}''.
graphql.notification.introspection.empty.endpoint.url=Please provide a non-empty endpoint url in the config file.
graphql.notification.introspection.endpoint.config.not.found=Configuration for the endpoint is not found.
graphql.notification.introspection.unable.to.build.path=Unable to build a file path to save the introspection result
graphql.notification.error.title=GraphQL error
graphql.notification.ssl.cert.error.title=SSL certificate error
graphql.notification.stack.trace=Stack trace
graphql.notification.retry.without.defaults=Retry (skip default values from now on)
graphql.notification.retry=Retry
graphql.notification.unable.to.open.editor=Unable to open an editor for ''{0}''
graphql.notification.unable.to.create.file=Unable to create file ''{0}'' in directory ''{1}''.<br/>Error: {2}
graphql.notification.unable.to.delete.file=Unable to delete file ''{0}'' in directory ''{1}''.<br/>Error: {2}
graphql.notification.invalid.config.file=Invalid GraphQL configuration file
graphql.notification.open.file=Open ''{0}''
graphql.notification.unable.to.parse.file=Unable to parse {0}
graphql.notification.load.schema.from.endpoint.title=Get GraphQL schema from endpoint now?
graphql.notification.load.schema.from.endpoint.body=Introspect ''{0}'' to update the local schema file.
graphql.notification.load.schema.from.endpoint.action=Introspect ''{0}''
graphql.notification.trust.all.hosts=Trust all hosts
graphql.notification.configuration.error=GraphQL configuration error
graphql.notification.config.not.found.title=GraphQL configuration not found
graphql.notification.config.not.found.body=Searched current and parent directories up to the project root.
graphql.notification.config.not.found.create.action=Create configuration file
graphql.notification.sdl.generation.error.text=Unable to construct a valid GraphQL schema with the provided introspection result
graphql.notification.sdl.generation.syntax.error.text=The server introspection response cannot be parsed as a valid JSON object
graphql.notification.sdl.generation.stack.trace.action=Stack trace
graphql.notification.sdl.generation.hide.notification.action=Hide notification
graphql.notification.migrate.config.text=Migrate GraphQL Config to a new syntax
graphql.notification.migrate.config.action=Migrate
graphql.notification.title.unable.to.create=Unable to create {0}
graphql.notification.content.unable.to.create.file.in.directory=Unable to create file ''{0}'' in directory ''{1}'': {2}
graphql.notification.content.open.schema.file=Open schema file
graphql.notification.title.limit.graphql.that.sent.to.server=Limit the query that is sent to the server

# Actions
graphql.action.open.config.file.title=Open Configuration File
graphql.action.toggle.variables.editor.title=Toggle Variables Editor
graphql.action.toggle.variables.editor.desc=Toggles the GraphQL variables editor
action.GraphQLCreateConfigFile.text=GraphQL Config
action.GraphQLCreateConfigFile.description=Creates a new GraphQL configuration file
graphql.action.create.config.file.command=Create GraphQL Config
action.GraphQLNewFileAction.text=GraphQL File
action.GraphQLNewFileAction.description=Creates a new GraphQL file
graphql.action.create.file.from.template.name=Create GraphQL {0}
graphql.action.create.file.from.template.dialog.title=New GraphQL File
graphql.action.create.file.from.template.dialog.kind=GraphQL file
action.GraphQLRestartSchemaDiscovery.text=Restart Schema Discovery
action.GraphQLRestartSchemaDiscovery.description=Performs GraphQL schema discovery across the project
action.GraphQLMigrateLegacyConfig.text=Migrate GraphQL Config
action.GraphQLEditEnvironmentVariables.text=Edit GraphQL Environment Variables
graphql.action.edit.environment.variables.toolbar.title=Edit Environment Variables
action.GraphQLRerunLatestIntrospection.text=Rerun Introspection Query
graphql.action.rerun.latest.introspection.schema.title=Rerun Introspection Query ({0})
action.GraphQLRerunLatestIntrospection.description=Reruns the latest introspection query that was performed to update the local schema, e.g. when a remote schema has been changed
graphql.action.run.introspection.query.title=Run Introspection Query
graphql.action.open.introspection.schema.title=Open Introspection Schema
action.GraphQLExecuteEditor.text=Execute GraphQL
action.GraphQLExecuteEditor.description=Executes the current GraphQL file against the specified GraphQL endpoint
graphql.action.add.schema.configuration.text=Add Schema Configuration
graphql.action.adds.new.graphql.configuration.file.description=Adds a new GraphQL configuration file
graphql.action.edit.selected.schema.configuration.text=Edit Selected Schema Configuration
graphql.action.opens.graphql.config.file.for.selected.schema.description=Opens the GraphQL config file for the selected schema
graphql.action.schemas.panel.help.text=Help
graphql.action.schemas.panel.open.documentation.description=Open the GraphQL plugin documentation

# Config
graphql.config.error.title=GraphQL configuration error
graphql.config.evaluation.error=Failed to evaluate config
graphql.config.evaluation.interpreter.not.found.error=Could not evaluate the GraphQL configuration file ''{0}'' because a Node.js interpreter was not found
graphql.config.node.interpreter.error=Node.js interpreter not found
graphql.config.reload=Reload

# Introspection
graphql.introspection.missing.data=Expected `data` key to be present in query result.
graphql.introspection.missing.schema=Expected `__schema` key to be present in query result data.
graphql.introspection.errors=Introspection query returned errors: {0}
graphql.introspection.run.query=Run introspection query to generate GraphQL SDL schema file

# Environment variables
graphql.environment.variables.dialog.title=GraphQL Environment Variables

# Progress
graphql.progress.executing.introspection.query=Executing GraphQL introspection query
graphql.progress.title.executing.graphql=Executing GraphQL

# Editor
graphql.line.marker.generate.schema.file=Generate GraphQL SDL schema file
graphql.tab.title.graphql.schema=GraphQL Schema ({0})
graphql.editor.element.is.included.in.query.execution=Element is included in query execution
graphql.editor.query.hint.description=Place the caret <a href="{0}">inside an operation</a> to execute it on its own.<br> \
  Referenced fragments are automatically included.<br>\
  <div style="margin: 4px 0 4px 0;"><a style="text-decoration: none" href="{1}">Don''t show this again</a></div>
graphql.editor.hint.text.executed.selection=Executed selection
graphql.hint.text.executed.named.operation=Executed {0} "{1}"
graphql.hint.text.executed.anonymous.operation=Executed anonymous {0}
graphql.hint.text.executed.buffer=Executed buffer "{0}"
graphql.endpoint.tooltip=GraphQL endpoint
graphql.hint.text.failed.to.parse.variables.as.json=Failed to parse variables as JSON:\n{0}

# Config
graphql.config.schema.name=GraphQL config
graphql.config.legacy.schema.name=GraphQL legacy config

# Tool window
graphql.toolwindow.discovery.not.completed=Schema discovery has not completed
graphql.toolwindow.action.introspect.endpoint=Get GraphQL Schema From Endpoint
graphql.toolwindow.action.create.scratch=New GraphQL Scratch File
graphql.toolwindow.schema.errors.list.node.name=Schema errors
graphql.toolwindow.schema.errors.list.node.empty.errors=No errors found
graphql.toolwindow.schema.error.node.tooltip=double click to open stack trace
graphql.toolwindow.schema.endpoints.list.node.name=Endpoints
graphql.toolwindow.schema.endpoints.default.node.name=No endpoints available in the default schema
graphql.toolwindow.schema.content.node.name=Schema discovery summary
graphql.toolwindow.schema.content.empty.node.tooltip=schema is empty
graphql.toolwindow.schema.content.types.count={0} types
graphql.toolwindow.schema.content.interfaces.count={0} interfaces
graphql.toolwindow.schema.content.inputs.count={0} inputs
graphql.toolwindow.schema.content.enums.count={0} enums
graphql.toolwindow.schema.content.unions.count={0} unions
graphql.toolwindow.schema.content.scalars.count={0} scalars
graphql.toolwindow.schema.content.directives.count={0} directives
graphql.toolwindow.default.schema.node.name=Default project-wide schema
graphql.toolwindow.projects.node.name=Projects
graphql.tooltip.search.schema.registry=Double click or press Enter to search the schema registry
graphql.search.schema.registry.0=Search schema registry "{0}"
graphql.tooltip.endpoints.perform.introspection.queries.mutations=Endpoints allow you to perform GraphQL introspection, queries and mutations
graphql.tab.title.schemas.project.structure=Schemas and Project Structure
graphql.tab.title.query.result=Query Result
graphql.query.result.window.bytes.count={0} bytes
graphql.query.result.statistics={0}: {1} ms execution time, {2} response
graphql.query.result.statistics.error=, {0} {1}
graphql.query.result.statistics.single.error=error
graphql.query.result.statistics.multiple.errors=errors

# Inspections
graphql.inspection.go.to.related.definition.family.name=Navigate to related definition
graphql.inspection.go.to.related.definition.name=Navigate to related definition ''{0}''
graphql.inspection.related.definitions=Related definitions:
graphql.inspection.suppress.for.file=Suppress for file
graphql.inspection.suppress.for.definition=Suppress for definition
graphql.inspection.display.name.schema.validation=Schema validation
graphql.inspection.display.name.unresolved.reference=Unresolved reference
graphql.inspection.display.name.deprecated.symbols=Deprecated symbols
graphql.inspection.display.name.type.redefinition=Type redefinition
graphql.inspection.display.name.member.redefinition=Member redefinition
graphql.inspection.display.name.unexpected.type=Unexpected type
graphql.inspection.display.name.illegal.name=Illegal name
graphql.inspection.display.name.empty.type=Empty type
graphql.inspection.display.name.duplicate.argument=Duplicate argument
graphql.inspection.display.name.interface.implementation=Interface implementation
graphql.inspection.display.name.duplicate.directive=Duplicate directive
graphql.inspection.display.name.missing.type=Missing type
graphql.inspection.display.name.illegal.directive.argument=Illegal directive argument
graphql.inspection.display.name.invalid.directive.location=Invalid directive location
graphql.intention.name.add.missing.type=Add "{0} {1}"
graphql.intention.create.missing.type.definition.family.name=Create missing type definition

graphql.inspection.deprecated.symbols.description.template=Deprecated: {0}
graphql.inspection.deprecated.symbols.description.template.default=Deprecated symbol used, consult docs for better alternative

# Inspection groups
graphql.inspection.group.general=General
graphql.inspection.group.schema=Schema

# Settings
graphql.settings.frameworks=Frameworks

graphql.settings.introspection=Introspection
graphql.settings.introspection.query.label=Query
graphql.settings.introspection.query.empty.text=Leave blank for default
graphql.settings.introspection.query.tooltip=Use a different introspection query for cases where the GraphQL endpoint is incompatible with the plugin introspection query
graphql.settings.introspection.default.values.label=Include argument default values in schema introspection
graphql.settings.introspection.default.values.tooltip=Skipping default values improves interoperability with endpoints that don't follow the GraphQL specification for default values. The schema can still be used, but information about the default values will be unavailable
graphql.settings.introspection.repeatable.directives.label=Request the "repeatable" property for directives
graphql.settings.introspection.repeatable.directives.tooltip=Repeatable directives are a relatively new feature and may not be supported by some GraphQL implementations
graphql.settings.introspection.open.editor.label=Open introspection results in the editor

# Libraries
graphql.library.prefix=GraphQL:
graphql.library.built.in=Specification
graphql.library.relay=Relay
graphql.library.federation=Federation
graphql.library.apollokotlin=Apollo Kotlin

# Code style
graphql.attribute.descriptor.keyword=Keyword
graphql.attribute.descriptor.number=Number
graphql.attribute.descriptor.string=String
graphql.attribute.descriptor.comment=Comment
graphql.attribute.descriptor.operation.definition=Operation definition
graphql.attribute.descriptor.fragment.definition=Fragment definition
graphql.attribute.descriptor.fragment.spread=Fragment spread
graphql.attribute.descriptor.field.name=Field name
graphql.attribute.descriptor.field.alias=Field alias
graphql.attribute.descriptor.parameter=Parameter
graphql.attribute.descriptor.argument=Argument
graphql.attribute.descriptor.object.field=Object field
graphql.attribute.descriptor.variable.definition=Variable definition
graphql.attribute.descriptor.variable=Variable
graphql.attribute.descriptor.type.name=Type name
graphql.attribute.descriptor.constant=Constant
graphql.attribute.descriptor.directive=Directive
graphql.attribute.descriptor.unused.fragment=Unused fragment

# Find usage
graphql.find.usage.type=type
graphql.find.usage.field=field
graphql.find.usage.argument=argument
graphql.find.usage.fragment=fragment
graphql.find.usage.enum.value=enum value
graphql.find.usage.directive=directive
graphql.find.usage.unknown=unknown

# Dialog
graphql.dialog.title.select.graphql.configuration.folder=Select GraphQL Configuration Folder
graphql.dialog.title.select.graphql.schema.base.directory=Select GraphQL Schema Base Directory

# Validation
graphql.validation.enum.values.can.not.be.named.0=Enum values cannot be named ''{0}''
graphql.validation.unknown.directive.location.0=Unknown directive location ''{0}''
# Full message can look like: Unknown field "name" on object type "SomeUser". Did you mean "firstName", or "lastName", or "middleName"?
graphql.validation.unknown.field.0=Unknown field "{0}"
graphql.validation.on.0.type.1=on {0}type "{1}"
graphql.validation.object.type=object
graphql.validation.interface.type=interface
graphql.validation.field.name.suggestion.delimiter=, or
graphql.validation.did.you.mean.0=. Did you mean {0}?
graphql.validation.parent.selection.or.operation.does.not.resolve.to.a.valid.schema.type=: The parent selection or operation does not resolve to a valid schema type
graphql.validation.unknown.fragment.spread.0=Unknown fragment spread "{0}"
graphql.validation.unknown.argument.0=Unknown argument "{0}"
graphql.validation.unknown.directive.0=Unknown directive "{0}"
graphql.validation.on.input.type.0=on input type "{0}"
graphql.validation.unknown.type.0=Unknown type "{0}"

# Schema errors
graphql.schema.is.too.complex.error.text=The schema size exceeds the limit of {0} type definitions. This limit is set by the IDE to prevent performance issues. To resolve this, consider defining a more specific scope by creating a GraphQL configuration file
